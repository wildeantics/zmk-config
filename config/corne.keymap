/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp E   &kp R         &kp T          &kp Y        &kp U   &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL       &kp A  &kp S  &kp D   &kp F         &kp G          &kp H        &kp J   &kp K      &kp L    &kp SEMI  &kp DELETE
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C   &kp V         &kp B          &kp N        &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp LEFT_WIN
                              &trans  &kp LEFT_ALT  &lt 1 SPACE    &lt 2 ENTER  &trans  &trans
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp MINUS  &kp EQUAL
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7        &kp F8        &kp F9        &kp F10       &kp F11    &kp F12
&trans        &trans        &trans        &trans        &trans        &trans          &trans        &trans        &trans        &trans        &trans     &trans
                                          &trans        &trans        &trans          &trans        &trans        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp EXCLAMATION  &kp AT            &kp HASH    &kp DOLLAR         &kp PERCENT  &kp CARET          &kp AMPERSAND  &kp STAR        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS          &kp EQUAL
&kp K_PREVIOUS   &kp K_PLAY_PAUSE  &kp K_NEXT  &kp K_VOLUME_DOWN  &kp K_MUTE   &kp K_VOLUME_UP    &trans         &trans          &kp UP_ARROW          &kp LEFT_BRACKET       &kp RIGHT_BRACKET  &kp BACKSLASH
&kp PAGE_UP      &kp PAGE_DOWN     &kp HOME    &kp END            &trans       &trans             &trans         &kp LEFT_ARROW  &kp DOWN_ARROW        &kp RIGHT              &trans             &kp SINGLE_QUOTE
                                               &trans             &trans       &trans             &trans         &trans          &trans
            >;
        };

        bonus_layer {
            bindings = <
&rgb_ug RGB_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &trans    &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF
&bl BL_TOG       &bl BL_CYCLE     &trans           &trans           &trans           &trans    &trans           &trans           &trans           &trans           &trans           &trans
&bt BT_PRV       &bt BT_NXT       &bt BT_CLR       &trans           &trans           &trans    &trans           &trans           &trans           &trans           &trans           &trans
                                                   &trans           &trans           &trans    &trans           &trans           &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        bonus_layer_cond {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
